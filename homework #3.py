# -*- coding: utf-8 -*-
"""
Created on Mon Jan 31 10:57:01 2022

@author: admin
"""

'''1. Реализовать функцию, принимающую два числа (позиционные аргументы)
 и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть 
 обработку ситуации деления на ноль.'''
 
def subs(num1,num2):
     try:
        s = num1 / num2
        return s
     except ZeroDivisionError:
         print ('You cant divide by 0 ')
     except ValueError:
         print ('Type a number ')
print(subs(int(input('Type a number to divivde')),int(input('Type a divisor'))))

'''2. Выполнить функцию, которая принимает несколько параметров, описывающих 
данные пользователя: имя, фамилия, год рождения, город проживания, email, 
телефон. Функция должна принимать параметры как именованные аргументы. 
Осуществить вывод данных о пользователе одной строкой.'''

def cv(n = input('name '),s = input('surname '),y = input('date of birth '),c = input('curren location '),e = input('name emai'),t = input('name telephone_number')):
    return n, s, y, c, e, t
print('Your info ', cv())


'''3. Реализовать функцию my_func(), которая принимает три позиционных 
аргумента и возвращает сумму наибольших двух аргументов.'''

def my_func(x, y, z):
    if x > y and z > y:
        s = x + z
        return s
    elif y > x and z > x:
        s = y + z
        return s
    else:
        s = x + y
        return s
print(my_func(1, 2, 1))


'''4. Программа принимает действительное положительное число x и целое
 отрицательное число y. Выполните возведение числа x в степень y. 
 Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись
 без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — 
возведение в степень с помощью оператора **. Второй — более сложная 
реализация без оператора **, предусматривающая использование цикла.'''

#Вариант 1

def my_func(x, y):
    p1 = abs(x) 
    p2 = abs(y) 
    result = p1 ** p2
    return result
print(my_func(6, -6))

#Вариант 2 (не получился)

def my_func(x, y):
    p1 = abs(x) 
    p2 = abs(y) 
    result1 = 1
    for i in range(p2):
        result2 = result1 * p1 * i
    return result2

print(my_func(3, -5))



'''5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. 
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжит
ь ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых
 чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введён после нескольких чисел, то вначале нужно добавить 
сумму этих чисел к полученной ранее сумме и после этого завершить программу.'''


result = 0

while True:
    query = input("Type your numbers or special stop sign s ")
    inputs = query.split(" ")
    for inp in inputs:
        try:
            number = float(inp)
            result += number       
        except:
            if inp == 's':
                print(f"Your sum is {result}. Program stops here")
                break
            else:
                print(f"Your sum is {result}")
                break


'''6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв
 и возвращающую их же, но с прописной первой буквой.
 Например, print(int_func(‘text’)) -> Text.'''
 
def int_func(a):
     return a.title()
print(int_func('capital me'))

''' Продолжить работу над заданием В программу должна попадать строка из слов, разделённых пробелом. 
 Каждое слово состоит из латинских букв в нижнем регистре.
 Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. 
 Используйте написанную ранее функцию int_func()'''

print((int_func(input())))
