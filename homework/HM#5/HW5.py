# -*- coding: utf-8 -*-
"""
Created on Mon Feb  7 10:04:46 2022

@author: admin
"""

'''1. Создать программный файл в текстовом формате, записать в него построчно 
данные, вводимые пользователем. Об окончании ввода данных будет свидетельствовать
 пустая строка.'''
 
import pandas as pd
import numpy as np
import os
import shutil
import sys
import json
import re

os.getcwd()
os.chdir('C:/Users/admin/Desktop/sanzhi/Python-/homework/HM#5')
with open(os.path.join(os.getcwd(), "Input.txt"), "w") as f_obj:
    print(" ", file=f_obj)
text = open("Input.txt", "w")
text.write(input(" "))
text.close()
    

'''2. Создать текстовый файл (не программно), сохранить в нём несколько строк, 
выполнить подсчёт строк и слов в каждой строке.'''


count_l = 0
count_w = 0
with open(r"count.txt", 'r', encoding = 'utf-8') as data:
    for line in data:
        if line != "\n":
            count_l += 1
with open(r"count.txt", 'r') as data:
    w1 = data.read()
    w2 = w1.split()
    for word in w2:
        if not word.isnumeric():
            count_w += 1
print (count_l, count_w)




'''3. Создать текстовый файл (не программно).
 Построчно записать фамилии сотрудников и величину их окладов (не менее 10 строк).
 Определить, кто из сотрудников имеет оклад менее 20 тысяч, 
 вывести фамилии этих сотрудников. Выполнить подсчёт средней величины дохода 
сотрудников.
Пример файла:
    
Иванов 23543.12
Петров 13749.32'''

import codecs

os.getcwd()
with open('salary.txt', 'r', encoding = 'utf-8') as my_file:
    low = []
    my_list = my_file.read().split("n")
    for i in my_list:
        i = i.split()
        print(i)
        if i int(float(i[0])) < 20000:
            low.append(i)




4. Создать (не программно) текстовый файл со следующим содержимым:
One — 1
Two — 2
Three — 3
Four — 4
Напишите программу, открывающую файл на чтение и считывающую построчно данные. 
При этом английские числительные должны заменяться на русские. 
Новый блок строк должен записываться в новый текстовый файл.
5. Создать (программно) текстовый файл, записать в него программно набор чисел, 
разделённых пробелами. Программа должна подсчитывать сумму чисел в файле и 
выводить её на экран.



with open('av.count.txt', 'w+', encoding = 'utf-8') as file:
    file.write(input('numbers: '))
f1 = open('av.count.txt', 'r', encoding = 'utf-8')
lines = f1.readline()
results = list(lines.split(' '))
print(results)
total = 0
for element in results:
   if isinstance(element, int) or element.isdigit():
      total += int(element)
print(total)
f1.close()




6. Сформировать (не программно) текстовый файл. В нём каждая строка должна 
описывать учебный предмет и наличие лекционных, практических и лабораторных 
занятий по предмету. Сюда должно входить и количество занятий. Необязательно, 
чтобы для каждого предмета были все типы занятий.
Сформировать словарь, содержащий название предмета и общее количество занятий 
по нему. Вывести его на экран.
Примеры строк файла: Информатика: 100(л) 50(пр) 20(лаб).
Физика: 30(л) — 10(лаб)
Физкультура: — 30(пр) —
Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

7. Создать вручную и заполнить несколькими строками текстовый файл, в котором 
каждая строка будет содержать данные о фирме: название, форма собственности, 
выручка, издержки.
Пример строки файла: firm_1 ООО 10000 5000.

Необходимо построчно прочитать файл, вычислить прибыль каждой компании, 
а также среднюю прибыль. Если фирма получила убытки, в расчёт средней прибыли 
её не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями,
 а также словарь со средней прибылью. Если фирма получила убытки, 
 также добавить её в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].

Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
Подсказка: использовать менеджер контекста.